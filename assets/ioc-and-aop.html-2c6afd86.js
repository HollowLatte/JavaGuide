const e=JSON.parse('{"key":"v-02d558fc","path":"/system-design/framework/spring/ioc-and-aop.html","title":"IoC & AOP详解（快速搞懂）","lang":"zh-CN","frontmatter":{"title":"IoC & AOP详解（快速搞懂）","category":"框架","tag":["Spring"],"description":"这篇文章会从下面从以下几个问题展开对 IoC &amp; AOP 的解释 什么是 IoC？ IoC 解决了什么问题？ IoC 和 DI 的区别？ 什么是 AOP？ AOP 解决了什么问题？ AOP 的应用场景有哪些？ AOP 为什么叫做切面编程？ AOP 实现方式有哪些？ 首先声明：IoC &amp; AOP 不是 Spring 提出来的，它们在 Spring 之前其实已经存在了，只不过当时更加偏向于理论。Spring 在技术层次将这两个思想进行了很好的实现。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/JavaGuide/system-design/framework/spring/ioc-and-aop.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试 + 学习指南)"}],["meta",{"property":"og:title","content":"IoC & AOP详解（快速搞懂）"}],["meta",{"property":"og:description","content":"这篇文章会从下面从以下几个问题展开对 IoC &amp; AOP 的解释 什么是 IoC？ IoC 解决了什么问题？ IoC 和 DI 的区别？ 什么是 AOP？ AOP 解决了什么问题？ AOP 的应用场景有哪些？ AOP 为什么叫做切面编程？ AOP 实现方式有哪些？ 首先声明：IoC &amp; AOP 不是 Spring 提出来的，它们在 Spring 之前其实已经存在了，只不过当时更加偏向于理论。Spring 在技术层次将这两个思想进行了很好的实现。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:tag","content":"Spring"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IoC & AOP详解（快速搞懂）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"IoC （Inversion of control ）","slug":"ioc-inversion-of-control","link":"#ioc-inversion-of-control","children":[{"level":3,"title":"什么是 IoC?","slug":"什么是-ioc","link":"#什么是-ioc","children":[]},{"level":3,"title":"IoC 解决了什么问题?","slug":"ioc-解决了什么问题","link":"#ioc-解决了什么问题","children":[]},{"level":3,"title":"IoC 和 DI 有区别吗？","slug":"ioc-和-di-有区别吗","link":"#ioc-和-di-有区别吗","children":[]}]},{"level":2,"title":"AOP（Aspect oriented programming）","slug":"aop-aspect-oriented-programming","link":"#aop-aspect-oriented-programming","children":[{"level":3,"title":"什么是 AOP？","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":3,"title":"AOP 为什么叫面向切面编程？","slug":"aop-为什么叫面向切面编程","link":"#aop-为什么叫面向切面编程","children":[]},{"level":3,"title":"AOP 解决了什么问题？","slug":"aop-解决了什么问题","link":"#aop-解决了什么问题","children":[]},{"level":3,"title":"AOP 的应用场景有哪些？","slug":"aop-的应用场景有哪些","link":"#aop-的应用场景有哪些","children":[]},{"level":3,"title":"AOP 实现方式有哪些？","slug":"aop-实现方式有哪些","link":"#aop-实现方式有哪些","children":[]}]}],"git":{},"readingTime":{"minutes":9.42,"words":2826},"filePathRelative":"system-design/framework/spring/ioc-and-aop.md","excerpt":"<p>这篇文章会从下面从以下几个问题展开对 IoC &amp; AOP 的解释</p>\\n<ul>\\n<li>什么是 IoC？</li>\\n<li>IoC 解决了什么问题？</li>\\n<li>IoC 和 DI 的区别？</li>\\n<li>什么是 AOP？</li>\\n<li>AOP 解决了什么问题？</li>\\n<li>AOP 的应用场景有哪些？</li>\\n<li>AOP 为什么叫做切面编程？</li>\\n<li>AOP 实现方式有哪些？</li>\\n</ul>\\n<p>首先声明：IoC &amp; AOP 不是 Spring 提出来的，它们在 Spring 之前其实已经存在了，只不过当时更加偏向于理论。Spring 在技术层次将这两个思想进行了很好的实现。</p>","copyright":{"author":"JavaGuide(javaguide.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
