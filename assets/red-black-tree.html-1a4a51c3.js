import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c as s,a as e,b as t,d as a,e as i}from"./app-03179461.js";const c={},h=i('<h1 id="红黑树" tabindex="-1"><a class="header-anchor" href="#红黑树" aria-hidden="true">#</a> 红黑树</h1><p><strong>红黑树特点</strong> :</p><ol><li>每个节点非红即黑；</li><li>根节点总是黑色的；</li><li>每个叶子节点都是黑色的空节点（NIL 节点）；</li><li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）；</li><li>从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）。</li></ol><p><strong>红黑树的应用</strong>：TreeMap、TreeSet 以及 JDK1.8 的 HashMap 底层都用到了红黑树。</p>',4),_=e("strong",null,"为什么要用红黑树？",-1),d={href:"https://juejin.im/post/5a27c6946fb9a04509096248#comment",target:"_blank",rel:"noopener noreferrer"},p=e("strong",null,"相关阅读",-1),u={href:"https://zhuanlan.zhihu.com/p/24367771",target:"_blank",rel:"noopener noreferrer"},g=e("figure",null,[e("img",{src:"https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png",alt:"JavaGuide 官方公众号",tabindex:"0"}),e("figcaption",null,"JavaGuide 官方公众号")],-1);function f(m,x){const n=r("ExternalLinkIcon");return l(),s("div",null,[h,e("p",null,[_,t(" 简单来说红黑树就是为了解决二叉查找树的缺陷，因为二叉查找树在某些情况下会退化成一个线性结构。详细了解可以查看 "),e("a",d,[t("漫画：什么是红黑树？"),a(n)]),t("（也介绍到了二叉查找树，非常推荐）")]),e("p",null,[p,t("："),e("a",u,[t("《红黑树深入剖析及 Java 实现》"),a(n)]),t("（美团点评技术团队）")]),g])}const v=o(c,[["render",f],["__file","red-black-tree.html.vue"]]);export{v as default};
